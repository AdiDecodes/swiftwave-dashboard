# Install dependencies only when needed
FROM node:18.11-slim AS deps
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json ./
RUN npm ci

# Builder stage
FROM node:18-alpine AS builder

RUN mkdir -p /app
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules
ENV NODE_ENV production
RUN npm run build && npm prune --production

# Runtime stage
FROM nginx:1.25.2-alpine

# Copy the builded app
COPY --from=builder /app/dist /usr/share/nginx/html

# Port to expose
EXPOSE 80

# Modify nginx file permissions
RUN chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

COPY nginx.default.conf /etc/nginx/conf.d/default.conf

# Switch to use a non-root user from here on
USER nginx

CMD ["nginx", "-g", "daemon off;"]